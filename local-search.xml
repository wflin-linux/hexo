<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>总线协议</title>
    <link href="/2023/06/10/zong-xian-xie-yi/"/>
    <url>/2023/06/10/zong-xian-xie-yi/</url>
    
    <content type="html"><![CDATA[<h1 id="总线通信基本概念"><a href="#总线通信基本概念" class="headerlink" title="总线通信基本概念"></a>总线通信基本概念</h1><ul><li>通信方向划分<ul><li>全双工，收发数据可以同时进行</li><li>半双工，不能同时收发数据，数据发时不能接收，比如：I2C</li></ul></li><li>同步通信，公用时钟信号线<ul><li>比如：I2C，SPI，USB3.0</li><li>一般不支持远距离，通常是板级别之间的距离小于50cm的TTL电平</li><li>同等条件下比异步通信快一些</li><li>也可通过走差分信号实现更远距离的通信</li></ul></li><li>异步通信<ul><li>比如：uart，usb2.0，RJ45</li><li>通信距离会稍远一些，通常是主机或设备之间的通信</li><li>为了实现更远距离通信，一般走差分信号，比如：232，485，422，CAN</li></ul></li><li>串行通信<ul><li>定义：一个并发数据包被分成多次传输，大多数表现为以 bit 位为单位收发数据</li><li>传输方式：传输一个字节（8个位）的数据时，串口是将8个位排好队，逐个地在1条连接线上传输。</li><li>特点：通信线路简单，利用电话或电报线就可以实现通信，降低成本，适用于远距离通信，但传输速度慢。</li></ul></li><li>并行通信<ul><li>定义： 并行通信是指利用多条传输线将一个数据的各位同时传送</li><li>传输方式：传输一个字节（8个位）的数据时，并口是将8个位一字排开，分别在8条连接线上同时传输。</li><li>特点：传输速度块，适用于短距离通信。</li></ul></li></ul><p>Linux支持的总线有</p><blockquote><p>ls &#x2F;sys&#x2F;bus&#x2F;</p></blockquote><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs txt">ubuntu@server:~$ ls /sys/bus/<br>acpi/            event_source/    machinecheck/    node/            pnp/             spi/             xen-backend/<br>clockevents/     gpio/            mdio_bus/        nvmem/           rapidio/         usb/             <br>clocksource/     hid/             memory/          pci/             scsi/            virtio/          <br>container/       i2c/             mipi-dsi/        pci-epf/         sdio/            vme/             <br>cpu/             isa/             mmc/             pci_express/     serial/          workqueue/       <br>edac/            iscsi_flashnode/ nd/              platform/        serio/           xen/        <br></code></pre></td></tr></table></figure><h1 id="I2C"><a href="#I2C" class="headerlink" title="I2C"></a>I2C</h1><ul><li><p>因为没有片选信号所以选择从机是通过地址来实现的</p></li><li><p>通过启起和终止信号来标识一次完整的通信过程</p></li><li><p>通信过程</p><ul><li>主机发起起始信号（时钟高电平期间，数据产生一个下降沿）</li><li>发送地址，通信之前先通过从机地址选中要通信的从机设备<ul><li>地址一般从模块芯片数据手册中获得</li><li>为了避免出现地址重复（不规范)，有的也提供外部IO来手动指定）</li><li>通常是7位表示，也有10位地址</li></ul></li><li>主机接受到对应从机的应答<ul><li>ACK 表示正确应答</li><li>NACK 表示异常应答</li></ul></li><li>开始传输数据，而且每传输8位数据应答一位</li><li>主机发起停止信号（从机无法发起） 【时钟高电平期间，数据产生一个上升沿】</li><li>本次通信结束</li></ul></li><li><p>数据传输先发高位再发低位</p></li><li><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230801095335830.png" alt="image-20230801095335830"></p></li><li><p>I2C 是电平触发数据传输，不同于spi 的边缘触发</p></li><li><p>时钟低电平准备，高电平采集数据</p></li><li><p>位速率可达400kbit&#x2F;s</p></li><li><p>I2C传输格式（写数据）</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230801100924367.png" alt="image-20230801100924367"></p></li><li><p>I2C传输格式（读数据）</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230801101033404.png" alt="image-20230801101033404"></p></li><li><p>I2C 工作模式</p><ul><li>标准模式：位速率100kbit&#x2F;s</li><li>快速模式：位速率可达400kbit&#x2F;s 向下兼容</li><li>高速模式：位速率可达 3.4 Mbit&#x2F;s 向下兼容</li></ul></li></ul><h2 id="i2c-模拟时许分布实现"><a href="#i2c-模拟时许分布实现" class="headerlink" title="i2c 模拟时许分布实现"></a>i2c 模拟时许分布实现</h2><ul><li><p>起始信号时序编写</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230801105414199.png" alt="image-20230801105414199"></p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 起始信号</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">demo_i2c_start</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">// 将数据置1</span><br>    data_set();<br>    <span class="hljs-comment">// 将时钟置1</span><br>    clk_set();<br>    demo_i2c_dalay();<br>    data_clear();<br>    demo_i2c_dalay();<br>    <span class="hljs-comment">// 空闲时钟为低电平</span><br>    clk_clear();<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>终止信号时序编写</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230801110848197.png" alt="image-20230801110848197"></p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 终止信号</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">demo_i2c_stop</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    <span class="hljs-comment">// 将数据置0</span><br>    data_clear();<br>    <span class="hljs-comment">// 将时钟置1</span><br>    clk_set();<br>    demo_i2c_dalay();<br>    data_set();<br>    demo_i2c_dalay();<br>    <span class="hljs-comment">// 空闲时钟为高电平</span><br>    clk_clear();<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li><p>发送数据</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230801113840396.png" alt="image-20230801113840396"></p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 发送数据</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">demo_i2c_send_byte</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> data)</span><br>&#123;<br>    <span class="hljs-type">int</span> i;<br>    clk_clear(); <span class="hljs-comment">// 时钟为低电平开始准备</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (data &amp; (<span class="hljs-number">1</span> &lt;&lt; (<span class="hljs-number">7</span> - i)))<br>            data_set();<br>        <span class="hljs-keyword">else</span><br>            data_clear();<br><br>        <span class="hljs-comment">// 等待准备的数据稳定</span><br>        demo_i2c_dalay();<br>        <span class="hljs-comment">// 数据已稳定对方可以读取</span><br>        clk_set();<br>        <span class="hljs-comment">// 等待对方读取数据</span><br>        demo_i2c_dalay();<br>        clk_clear();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>接收数据</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> <span class="hljs-title function_">demo_i2c_recv_byte</span><span class="hljs-params">(viod)</span><br>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> data = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> i;<br>    data_in();<br>    clk_clear(); <span class="hljs-comment">// 时钟为低电平对方开始准备</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>    &#123;<br>        <span class="hljs-comment">// 等待对方准备好数据</span><br>        demo_i2c_dalay();<br>        <span class="hljs-comment">// 数据已稳定可以读取</span><br>        clk_set();<br>        <span class="hljs-comment">// 先延时再读，避免发送临界</span><br>        demo_i2c_dalay();<br>        data |= data_get_in() &lt;&lt; (<span class="hljs-number">7</span> - i);<br>        clk_clear();<br>    &#125;<br>    <span class="hljs-keyword">return</span> data;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>发送应答时序编写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">demo_i2c_send_ack</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> ack)</span><br>&#123;<br>    data_out();<br>    <span class="hljs-type">int</span> i;<br>    clk_clear(); <span class="hljs-comment">// 时钟为低电平开始准备</span><br>    <span class="hljs-keyword">if</span> (ack)<br>        data_set();<br>    <span class="hljs-keyword">else</span><br>        data_clear();<br><br>    <span class="hljs-comment">// 等待准备的数据稳定</span><br>    demo_i2c_dalay();<br>    <span class="hljs-comment">// 数据已稳定对方可以读取</span><br>    clk_set();<br>    <span class="hljs-comment">// 等待对方读取数据</span><br>    demo_i2c_dalay();<br>    clk_clear();<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>接收应答</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> <span class="hljs-title function_">demo_i2c_recv_ack</span><span class="hljs-params">(viod)</span><br>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> ack = <span class="hljs-number">0</span>;<br>    data_in();<br>    <span class="hljs-comment">// 时钟为低电平对方开始准备</span><br>    clk_clear();<br><br>    <span class="hljs-comment">// 等待对方准备好数据</span><br>    demo_i2c_dalay();<br>    <span class="hljs-comment">// 数据已稳定可以读取</span><br>    clk_set();<br>    <span class="hljs-comment">// 先延时再读，避免发送临界</span><br>    demo_i2c_dalay();<br>    ack = data_get_in();<br>    clk_clear();<br>    <span class="hljs-keyword">return</span> ack;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>批量数据发送伪代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">// 将 buf 中的长度为 lem 的数据写到 reg 的寄存器里面</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">demo_i2c_send</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *buf, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> reg, <span class="hljs-type">int</span> len)</span><br>&#123;<br>    <span class="hljs-comment">// 起始信号</span><br>    <span class="hljs-comment">// 发送器件地址(包含读写标志)</span><br>    <span class="hljs-comment">// 接收应答</span><br>    <span class="hljs-comment">// 发送数据存放寄存器地址</span><br>    <span class="hljs-comment">// 接收应答</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-comment">// 发送数据</span><br>        <span class="hljs-comment">// 接收应答</span><br>    &#125;<br>    <span class="hljs-comment">// 终止信号</span><br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><h1 id="USB"><a href="#USB" class="headerlink" title="USB"></a>USB</h1><h2 id="usb-传输类型"><a href="#usb-传输类型" class="headerlink" title="usb 传输类型"></a>usb 传输类型</h2><ul><li><p>usb定义了4种类传输类型</p><ul><li>批量传输</li><li>同步传输（或等时传输）</li><li>中断传输，这里指是一种异步通信方式而已，而不是物理中断，实际传输靠沦陷实现</li><li>控制传输</li></ul></li><li><p>所有的命令均由主机发起，从机处于被应答状态</p></li><li><p>usb 传输事物</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230809220527140.png" alt="image-20230809220527140"></p></li></ul><h2 id="usb设备描述符及其枚举过程"><a href="#usb设备描述符及其枚举过程" class="headerlink" title="usb设备描述符及其枚举过程"></a>usb设备描述符及其枚举过程</h2><ul><li>描述符：描述了设备的各种行为和具体参数类型等，能够让主机明确应该加载什么样的驱动程序于设备之间进行怎么样的操作</li><li>设备描述符：基本是与厂商有关的信息，比如厂商id（vid），产品id（pid），可能的配置数量</li><li>配置描述符号：设备对主机提出的配置需求，记录可能的接口数量</li><li>接口描述符：功能的体现，记录断点的数量。</li><li>端点描述符：决定 usb 传输类型，也是通信的终点，类似是 Linux 系统的管道端口</li><li>枚举过程<ul><li>所谓枚举，其实就是一一列举的过程</li><li>设备连接主机开始，直到给设备完成从机地址的整个分配过程</li><li>只有成功被枚的设备才能进入正常的数据传输过程</li><li>枚举之前与设备通信是通过 0 地址和 0 端点进行的</li></ul></li></ul><h2 id="Linux-usb驱动开发框架"><a href="#Linux-usb驱动开发框架" class="headerlink" title="Linux usb驱动开发框架"></a>Linux usb驱动开发框架</h2><ul><li><p>主要有两类 usb 驱动开发</p><ul><li>usb 设备驱动程序（usb device drivers）：控制器端驱动，控制插入其中的 usb 设备</li><li>usb 期间驱动程序（usb gadget drivers）：设备端驱动，控制该设备如何作为一个 usb 设备和主机通信</li></ul><p>设备和主机通信</p></li><li><p>Linux usb驱动框架</p><p><img src="/%E6%80%BB%E7%BA%BF%E5%8D%8F%E8%AE%AE/image-20230809223618785.png" alt="image-20230809223618785"></p></li></ul><h2 id="Linux-usb驱动开发流程"><a href="#Linux-usb驱动开发流程" class="headerlink" title="Linux usb驱动开发流程"></a>Linux usb驱动开发流程</h2><ul><li>官方建议参考  usb-skeleton.c</li><li>定义一个 usb_driver</li><li>填充并初始化 usb_driver</li><li>通过 usb_register() 完成注册</li><li>通过 usb_unregister() 完成注销</li><li>完成 usb_device_id 配置条件的选择</li><li>usb 数据传输过程</li></ul><h1 id="串口（UART）"><a href="#串口（UART）" class="headerlink" title="串口（UART）"></a>串口（UART）</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>串口协议是一种在计算机和外部设备之间进行串行通信的规定或约定。它规定了数据在串口通信线路上传输的格式、速率、校验、流控制等参数，以确保发送方和接收方正确地解释和处理数据。</li><li>常见的串口协议包括以下主要内容：<ol><li><strong>数据位（Data Bits）</strong>： 数据位指定了每个数据字节中实际有效数据的位数。通常为5、6、7或8位。</li><li><strong>停止位（Stop Bits）</strong>： 停止位表示每个数据字节之后传输的空闲位数。常用的有1位和2位停止位。</li><li><strong>奇偶校验（Parity）</strong>： 奇偶校验用于检测传输过程中数据错误。校验位可以是奇校验（校验位被设置为确保数据位中的位数为奇数）或偶校验（校验位被设置为确保数据位中的位数为偶数）。</li><li><strong>波特率（Baud Rate）</strong>： 波特率指定了数据传输的速率，即单位时间内传输的位数。波特率常用的有9600、19200、38400、57600、115200等。</li><li><strong>流控制（Flow Control）</strong>： 流控制用于协调发送方和接收方之间的数据传输速度，以避免数据丢失。常见的流控制方式有硬件流控制（使用RTS&#x2F;CTS信号进行控制）和软件流控制（使用XON&#x2F;XOFF字符进行控制）。</li><li><strong>起始符和结束符</strong>： 有些串口通信协议在数据传输中会使用特定的起始符和结束符，以标识数据的开始和结束。</li></ol></li><li>串口协议的定义对于正确地进行串口通信非常重要。发送方和接收方必须遵守相同的协议规定，以确保数据的正确传输和解析。不同设备和应用场景可能会使用不同的串口协议，因此在使用串口进行通信时，需要了解和配置相应的串口协议参数</li></ul><h1 id="SPI"><a href="#SPI" class="headerlink" title="SPI"></a>SPI</h1><h1 id="CAN"><a href="#CAN" class="headerlink" title="CAN"></a>CAN</h1>]]></content>
    
    
    <categories>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c,I2C,SPI,USB,UART</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL练习</title>
    <link href="/2021/11/17/niu-ke-mysql/"/>
    <url>/2021/11/17/niu-ke-mysql/</url>
    
    <content type="html"><![CDATA[<h1 id="MySQL-exam"><a href="#MySQL-exam" class="headerlink" title="MySQL exam"></a>MySQL exam</h1><p>[传送门](<a href="https://www.nowcoder.com/exam/oj?tab=SQL%E7%AF%87&topicId=199&fromPut=pc_wzcpa_yupi_sf">牛客网 - 找工作神器|笔试题库|面试经验|实习招聘内推，求职就业一站解决_牛客网 (nowcoder.com)</a>)</p><h2 id="创建数据库并插入数据"><a href="#创建数据库并插入数据" class="headerlink" title="创建数据库并插入数据"></a>创建数据库并插入数据</h2><h3 id="SQL-Select-语句完整的执行顺序"><a href="#SQL-Select-语句完整的执行顺序" class="headerlink" title="SQL Select 语句完整的执行顺序"></a>SQL Select 语句完整的执行顺序</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><br>1、from 子句组装来自不同数据源的数据；<br>2、where 子句基于指定的条件对记录行进行筛选； <br>3、group by 子句将数据划分为多个分组； <br>4、使用聚集函数进行计算； <br>5、使用 having 子句筛选分组； <br>6、计算所有的表达式； <br>7、select 的字段； <br>8、使用 order by 对结果集进行排序。<br><br>SQL 语言不同于其他编程语言的最明显特征是处理代码的顺序。 在大多数据库语言中，代码按编码顺序被处理。但在 SQL 语句中，第一个被处理的子句式 FROM，而不是第一出现的 SELECT。<br></code></pre></td></tr></table></figure><h3 id="语句顺序展示"><a href="#语句顺序展示" class="headerlink" title="语句顺序展示"></a>语句顺序展示</h3><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs txt">(1) FROM &lt;left_table&gt; <br>(2) &lt;join_type&gt; JOIN &lt;right_table&gt; <br>(3) ON &lt;join_condition&gt; <br>(4) WHERE &lt;where_condition&gt; <br>(5) GROUP BY &lt;group_by_list&gt;<br>(6) WITH &#123;CUBE | ROLLUP&#125; <br>(7) HAVING &lt;having_condition&gt; <br>(8) SELECT (9) DISTINCT <br>(9) ORDER BY &lt;order_by_list&gt; <br>(10) &lt;TOP_specification&gt; &lt;select_list&gt;<br></code></pre></td></tr></table></figure><h2 id="要求返回结果的形式"><a href="#要求返回结果的形式" class="headerlink" title="要求返回结果的形式"></a>要求返回结果的形式</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ul><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">12138male21北京大学BeiJing<br>23214male复旦大学Shanghai<br>36543female20北京大学BeiJing<br>42315female23浙江大学ZheJiang<br>55432male25山东大学Shandong<br></code></pre></td></tr></table></figure></li><li><p>题解</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 牛客第一题</span><br><span class="hljs-keyword">select</span><br>id,device_id,gender,age,university,province <br><span class="hljs-keyword">from</span> <br>user_profile<br></code></pre></td></tr></table></figure></li></ul><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ul><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">2138male21北京大学<br>3214male复旦大学<br>6543female20北京大学<br>2315female23浙江大学<br>5432male25山东大学<br></code></pre></td></tr></table></figure></li><li><p>题解</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 牛客第二题</span><br><span class="hljs-keyword">select</span> <br>device_id,gender,age,university <br><span class="hljs-keyword">from</span> <br>user_profile<br></code></pre></td></tr></table></figure></li></ul><h3 id="第三题（结果去重）"><a href="#第三题（结果去重）" class="headerlink" title="第三题（结果去重）"></a>第三题（结果去重）</h3><ul><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">北京大学<br>复旦大学<br>浙江大学<br>山东大学<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li><strong>distinct</strong> 去掉查询结果的重复数据</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-comment">-- 牛客第三题,去重</span><br><span class="hljs-comment">-- distinct 去掉查询结果的重复数据</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">distinct</span> <br>university <br><span class="hljs-keyword">FROM</span> <br>user_profile<br></code></pre></td></tr></table></figure></li></ul><h3 id="第三题（limit-关键字考察）"><a href="#第三题（limit-关键字考察）" class="headerlink" title="第三题（limit 关键字考察）"></a>第三题（limit 关键字考察）</h3><ul><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">device_id<br>2138<br>3214<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li><strong>limit</strong> 展示查询结果的前多少数据，多用于分页查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br>device_id <br><span class="hljs-keyword">from</span> <br>user_profile <br>limit <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="第四题（as）关键字考察"><a href="#第四题（as）关键字考察" class="headerlink" title="第四题（as）关键字考察"></a>第四题（as）关键字考察</h3><ul><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">user_infos_example<br>2138<br>3214<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li><strong>as</strong>  给数据字段起别名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id user_infos_example <span class="hljs-keyword">from</span> user_profile limit <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="第五题（where-）精确查询"><a href="#第五题（where-）精确查询" class="headerlink" title="第五题（where ）精确查询"></a>第五题（where ）精确查询</h3><ul><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">device_id university<br>  2138   北京大学<br>  6543   北京大学<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li><strong>where</strong> 连接查询条件</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,university <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> university<span class="hljs-operator">=</span>&quot;北京大学&quot;<br></code></pre></td></tr></table></figure></li></ul><h3 id="第六题（where）条件查询"><a href="#第六题（where）条件查询" class="headerlink" title="第六题（where）条件查询"></a>第六题（where）条件查询</h3><ul><li><p>要求</p><blockquote><p><strong>查找年龄大于24岁的用户信息</strong></p></blockquote></li><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">device_idgenderageuniversity<br>5432male25山东大学<br></code></pre></td></tr></table></figure></li><li><p>题解</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,gender,age,university <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> age<span class="hljs-operator">&gt;</span><span class="hljs-number">24</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="第七题（where，between-and）区间查询"><a href="#第七题（where，between-and）区间查询" class="headerlink" title="第七题（where，between and）区间查询"></a>第七题（where，between and）区间查询</h3><ul><li><p>要求</p><blockquote><p>现在运营想要针对20岁及以上且23岁及以下的用户开展分析，请你取出满足条件的设备ID、性别、年龄。</p><p>用户信息表：user_profile</p></blockquote></li><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt"><br>device_idgenderage<br>2138male21<br>6543female20<br>2315female23<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li>解法一</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,gender,age <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> age<span class="hljs-operator">&lt;=</span><span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><ul><li>解法二</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,gender,age <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> age <span class="hljs-keyword">between</span> <span class="hljs-number">20</span> <span class="hljs-keyword">and</span> <span class="hljs-number">23</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="第八题（"><a href="#第八题（" class="headerlink" title="第八题（&gt;&#x3D;&lt;, !&#x3D;,&lt;&gt;）逻辑词考察"></a>第八题（&gt;&#x3D;&lt;, !&#x3D;,&lt;&gt;）逻辑词考察</h3><ul><li><p>要求</p><blockquote><p>查找除复旦大学的用户信息</p></blockquote></li><li><p>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ttx">device_idgenderageuniversity<br>2138male21北京大学<br>6543female20北京大学<br>2315female23浙江大学<br>5432male25山东大学<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li>解法一</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,gender,age,university <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> university<span class="hljs-operator">&lt;&gt;</span><span class="hljs-string">&#x27;复旦大学&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>解法二</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,gender,age,university <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> university <span class="hljs-operator">!=</span> <span class="hljs-string">&#x27;复旦大学&#x27;</span><br></code></pre></td></tr></table></figure><ul><li>解法三</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> device_id,gender,age,university <span class="hljs-keyword">from</span> user_profile <span class="hljs-keyword">where</span> university <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> (<span class="hljs-string">&#x27;复旦大学&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li><p>[ NOT ] IN (‘常量1’ , ‘常量2’ , ‘常量3’ , ‘常量4’)</p><ul><li>IN：当列表中的值于IN中的某个值相等时，则结果为 True，表明此记录为符合查询条件的记录</li><li>NOT IN：当列中的值与某个常量值相等时，结果为False，表明此纪录为不符合查询条件的记录。</li></ul></li><li><p>例子：查询所有班名是“电子信息工程技术”、“电子声像”或“电子组装技术”的班号和班名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 班号, 班名 <span class="hljs-keyword">FROM</span> 班级表<br><span class="hljs-keyword">WHERE</span> 班名 <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;电子信息工程技术&#x27;</span> , <span class="hljs-string">&#x27;电子声像‘, &#x27;</span>电子组装技术<span class="hljs-string">&#x27;)</span><br></code></pre></td></tr></table></figure></li><li><p>等价于：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> 班号,班名 <span class="hljs-keyword">FROM</span> 班级表<br><span class="hljs-keyword">WHERE</span> 班名<span class="hljs-operator">=</span> ‘电子信息工程技术’ <span class="hljs-keyword">OR</span><br>班名 <span class="hljs-operator">=</span> ‘电子声像’ <span class="hljs-keyword">OR</span><br>班名 <span class="hljs-operator">=</span> ‘电子组装技术’<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="第九题（is-not、is）"><a href="#第九题（is-not、is）" class="headerlink" title="第九题（is not、is）"></a>第九题（is not、is）</h3><ul><li><p>要求</p><blockquote><p>用 where 过滤空值练习</p></blockquote></li><li><p>样式</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">device_idgenderageuniversity<br>2138male21北京大学<br>6543female20北京大学<br>2315female23浙江大学<br>5432male25山东大学<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li>题解一</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br>device_id,gender,age,university <br><span class="hljs-keyword">from</span> <br>user_profile <br><span class="hljs-keyword">where</span> <br>age <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span><br></code></pre></td></tr></table></figure><ul><li>题解二</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">select</span> device_id,gender,age,university<br><span class="hljs-keyword">from</span> user_profile<br><span class="hljs-keyword">where</span> age <span class="hljs-operator">!=</span><span class="hljs-string">&#x27;&#x27;</span>;<br></code></pre></td></tr></table></figure></li></ul><h3 id="字符匹配"><a href="#字符匹配" class="headerlink" title="字符匹配"></a>字符匹配</h3><ul><li><h3 id><a href="#" class="headerlink" title></a></h3><p>一般形式为：</p><p>列名 [NOT ] LIKE</p><p>匹配串中可包含如下四种通配符：<br>_：匹配任意一个字符；<br>%：匹配0个或多个字符；<br>[ ]：匹配[ ]中的任意一个字符(若要比较的字符是连续的，则可以用连字符“-”表 达 )；<br>[^ ]：不匹配[ ]中的任意一个字符。</p><p>例23．查询学生表中姓‘张’的学生的详细信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `<span class="hljs-operator">*</span> ``<span class="hljs-keyword">FROM</span>` `学生表 ``<span class="hljs-keyword">WHERE</span>` `姓名 ``<span class="hljs-keyword">LIKE</span>` `‘张<span class="hljs-operator">%</span>’<br></code></pre></td></tr></table></figure><p>例24．查询姓“张”且名字是3个字的学生姓名。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `<span class="hljs-operator">*</span> ``<span class="hljs-keyword">FROM</span>` `学生表 ``<span class="hljs-keyword">WHERE</span>` `姓名 ``<span class="hljs-keyword">LIKE</span>` `<span class="hljs-string">&#x27;张__’</span><br></code></pre></td></tr></table></figure><p>如果把姓名列的类型改为nchar(20)，在SQL Server 2012中执行没有结果。原因是姓名列的类型是char(20)，当姓名少于20个汉字时，系统在存储这些数据时自动在后边补空格，空格作为一个字符，也参加LIKE的比较。可以用rtrim()去掉右空格。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `<span class="hljs-operator">*</span> ``<span class="hljs-keyword">FROM</span>` `学生表 ``<span class="hljs-keyword">WHERE</span>` `rtrim(姓名) ``<span class="hljs-keyword">LIKE</span>` `<span class="hljs-string">&#x27;张__&#x27;</span><br></code></pre></td></tr></table></figure><p>例25.查询学生表中姓‘张’、姓‘李’和姓‘刘’的学生的情况。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `<span class="hljs-operator">*</span> ``<span class="hljs-keyword">FROM</span>` `学生表 ``<span class="hljs-keyword">WHERE</span>` `姓名 ``<span class="hljs-keyword">LIKE</span>` `<span class="hljs-string">&#x27;[张李刘]%’</span><br></code></pre></td></tr></table></figure><p>例26.查询学生表表中名字的第2个字为“小”或“大”的学生的姓名和学号。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `姓名,学号 ``<span class="hljs-keyword">FROM</span>` `学生表 ``<span class="hljs-keyword">WHERE</span>` `姓名 ``<span class="hljs-keyword">LIKE</span>` `<span class="hljs-string">&#x27;_[小大]%&#x27;</span><br></code></pre></td></tr></table></figure><p>例27.查询学生表中所有不姓“刘”的学生。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `姓名 ``<span class="hljs-keyword">FROM</span>` `学生 ``<span class="hljs-keyword">WHERE</span>` `姓名 ``<span class="hljs-keyword">NOT</span>` `<span class="hljs-keyword">LIKE</span>` `<span class="hljs-string">&#x27;刘%’</span><br></code></pre></td></tr></table></figure><p>例28.从学生表表中查询学号的最后一位不是2、3、5的学生信息。</p><p><a href="https://www.nowcoder.com/practice/95d9922b1e2a49de80daa491889969ee?tpId=199&tqId=1971219&ru=/practice/f9f82607cac44099a77154a80266234a&qru=/ta/sql-quick-study/question-ranking&sourceUrl=/exam/oj?tab=SQL%E7%AF%87&topicId=199&fromPut=pc_wzcpa_yupi_sf#">复制代码</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span>` `<span class="hljs-operator">*</span> ``<span class="hljs-keyword">FROM</span>` `学生表 ``<span class="hljs-keyword">WHERE</span>` `学号 ``<span class="hljs-keyword">LIKE</span>` `<span class="hljs-string">&#x27;%[^235]&#x27;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="第十题（max）"><a href="#第十题（max）" class="headerlink" title="第十题（max）"></a>第十题（max）</h3><ul><li><p>找出复旦大学 gpa 最高是多少</p><ul><li><p>解法一：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># 方法<span class="hljs-number">1</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(gpa) <span class="hljs-keyword">as</span> gpa<br><span class="hljs-keyword">from</span> user_profile<br><span class="hljs-keyword">where</span> university<span class="hljs-operator">=</span><span class="hljs-string">&#x27;复旦大学&#x27;</span>;<br></code></pre></td></tr></table></figure></li><li><p>解法二</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># 方法<span class="hljs-number">2</span><br><span class="hljs-keyword">select</span> gpa<br><span class="hljs-keyword">from</span> user_profile<br><span class="hljs-keyword">where</span> university<span class="hljs-operator">=</span><span class="hljs-string">&#x27;复旦大学&#x27;</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> gpa <span class="hljs-keyword">desc</span> limit <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="第十一题（avg，round）"><a href="#第十一题（avg，round）" class="headerlink" title="第十一题（avg，round）"></a>第十一题（avg，round）</h3><ul><li><p>现在运营想要看一下男性用户有多少人以及他们的平均gpa是多少，用以辅助设计相关活动，请你取出相应数据。</p></li><li><p><strong>avg</strong>：平均值</p></li><li><p><strong>round</strong>：保留小数</p><ul><li><p>解法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">as</span> male_num,gpa <span class="hljs-keyword">as</span> avg_gpa <span class="hljs-keyword">where</span> user_profile <span class="hljs-keyword">where</span> gender<span class="hljs-operator">=</span><span class="hljs-string">&#x27;male&#x27;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="第十二题（group-by）"><a href="#第十二题（group-by）" class="headerlink" title="第十二题（group by）"></a>第十二题（group by）</h3><ul><li><p>题目：现在运营想要对每个学校不同性别的用户活跃情况和发帖数量进行分析，请分别计算出每个学校每种性别的用户数、30天内平均活跃天数和平均发帖数量。</p></li><li><p>信息：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">用户信息表：user_profile<br>30天内活跃天数字段（active_days_within_30）<br>发帖数量字段（question_cnt）<br>回答数量字段（answer_cnt）<br></code></pre></td></tr></table></figure></li><li><p>表信息说明</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">第一行表示:id为1的用户的常用信息为使用的设备id为2138，性别为男，年龄21岁，北京大学，gpa为3.4在过去的30天里面活跃了7天，发帖数量为2，回答数量为12<br>。。。<br>最后一行表示:id为7的用户的常用信息为使用的设备id为4321，性别为男，年龄26岁，复旦大学，gpa为3.6在过去的30天里面活跃了9天，发帖数量为6，回答数量为52<br></code></pre></td></tr></table></figure></li><li><p><strong>group by</strong>：按照字段分组，可以是多个字段</p><ul><li><p>解法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br>    gender,university,<br>    <span class="hljs-built_in">count</span>(device_id) <span class="hljs-keyword">as</span> user_num,<br>    <span class="hljs-built_in">avg</span>(active_days_within_30) <span class="hljs-keyword">as</span> avg_active_day,<br>    <span class="hljs-built_in">avg</span>(question_cnt) <span class="hljs-keyword">as</span> avg_question_cnt<br><span class="hljs-keyword">from</span> user_profile<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">by</span> university,gender<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="第十九题"><a href="#第十九题" class="headerlink" title="第十九题"></a>第十九题</h3><ul><li><p>题目：现在运营想查看每个学校用户的平均发贴和回帖情况，寻找低活跃度学校进行重点运营，请取出平均发贴数低于5的学校或平均回帖数小于20的学校。</p></li><li><p>表格描述</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">第一行表示:id为1的用户的常用信息为使用的设备id为2138，性别为男，年龄21岁，北京大学，gpa为3.4在过去的30天里面活跃了7天，发帖数量为2，回答数量为12<br>。。。<br>最后一行表示:id为7的用户的常用信息为使用的设备id为4321，性别为男，年龄26岁，复旦大学，gpa为3.6在过去的30天里面活跃了9天，发帖数量为6，回答数量为52<br><br>根据示例，你的查询应返回以下结果，请你保留3位小数(系统后台也会自动校正)，3位之后四舍五入：<br></code></pre></td></tr></table></figure></li><li><p>表信息说明</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">universityavg_question_cntavg_answer_cnt<br>北京大学2.500021.000<br>浙江大学1.0002.000<br></code></pre></td></tr></table></figure></li><li><p><strong>问题分解</strong></p><ul><li>限定条件：平均发贴数低于5或平均回帖数小于20的学校，<code>avg(question_cnt)&lt;5 or avg(answer_cnt)&lt;20</code>，聚合函数结果作为筛选条件时，不能用where，而是用having语法，配合重命名即可；</li><li>按学校输出：需要对每个学校统计其平均发贴数和平均回帖数，因此<code>group by university</code></li></ul></li><li><p><strong>问题细节</strong></p><ul><li>having ，对查询结果进行过滤，过滤不能用  <code>过滤计算函数之后的结果不能用 where 这里</code>。</li></ul></li><li><p>题解</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    university,<br>    <span class="hljs-built_in">avg</span>(question_cnt) <span class="hljs-keyword">as</span> avg_question_cnt,<br>    <span class="hljs-built_in">avg</span>(answer_cnt) <span class="hljs-keyword">as</span> avg_answer_cnt<br><span class="hljs-keyword">from</span> user_profile<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> university<br><span class="hljs-keyword">having</span> avg_question_cnt<span class="hljs-operator">&lt;</span><span class="hljs-number">5</span> <span class="hljs-keyword">or</span> avg_answer_cnt<span class="hljs-operator">&lt;</span><span class="hljs-number">20</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="第-二十-题-（order-by）"><a href="#第-二十-题-（order-by）" class="headerlink" title="第 二十 题 （order by）"></a>第 二十 题 （order by）</h3><ul><li><p><strong>题目</strong></p><p>现在运营想要查看不同大学的用户平均发帖情况，并期望结果按照平均发帖情况进行升序排列，请你取出相应数据。</p></li><li><p>描述</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">第一行表示:id为1的用户的常用信息为使用的设备id为2138，性别为男，年龄21岁，北京大学，gpa为3.4在过去的30天里面活跃了7天，发帖数量为2，回答数量为12<br>。。。<br>最后一行表示:id为7的用户的常用信息为使用的设备id为4321，性别为男，年龄26岁，复旦大学，gpa为3.6在过去的30天里面活跃了9天，发帖数量为6，回答数量为52<br></code></pre></td></tr></table></figure></li><li><p>查询结果</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs txt">universityavg_question_cnt<br>浙江大学1.0000<br>北京大学2.5000<br>复旦大学5.5000<br>山东大学11.0000<br></code></pre></td></tr></table></figure></li><li><p>题解</p><ul><li>order by 字段名 <code>desc</code> 和 <code>asc</code><ul><li><strong>desc</strong> 降序排列</li><li><strong>asc</strong> 升序排列（查询结果默认也是升序排列）</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> university, <span class="hljs-built_in">avg</span>(question_cnt)  avg_question_cnt<br><span class="hljs-keyword">from</span> user_profile<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">desc</span><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> university<br></code></pre></td></tr></table></figure></li></ul><h3 id="第二十一题（子查询）"><a href="#第二十一题（子查询）" class="headerlink" title="第二十一题（子查询）"></a>第二十一题（子查询）</h3><ul><li><p><strong>题目</strong></p><p>现在运营想要查看所有来自浙江大学的用户题目回答明细情况，请你取出相应数据</p></li><li><p><strong>描述</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">第一行表示:id为1的用户的常用信息为使用的设备id为2138，性别为男，年龄21岁，北京大学，gpa为3.4在过去的30天里面活跃了7天，发帖数量为2，回答数量为12<br>。。。<br>最后一行表示:id为7的用户的常用信息为使用的设备id为4321，性别为男，年龄26岁，复旦大学，gpa为3.6在过去的30天里面活跃了9天，发帖数量为6，回答数量为52<br></code></pre></td></tr></table></figure></li><li><p><strong>显示信息说明</strong></p><p><img src="/%E7%89%9B%E5%AE%A2MySQL/D9E601E7A15464E123E07993B5B38512.png" alt="img"></p></li><li><p><strong>题解</strong></p><ul><li><p>解法一：子查询</p><ul><li>在 where 的位置使用 子查询</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span><br>device_id,<br>question_id,<br><span class="hljs-keyword">result</span><br><span class="hljs-keyword">FROM</span> question_practice_detail<br><span class="hljs-keyword">WHERE</span> device_id <span class="hljs-keyword">IN</span> (<span class="hljs-keyword">SELECT</span> device_id <span class="hljs-keyword">FROM</span><br>user_profile<br><span class="hljs-keyword">WHERE</span> university <span class="hljs-operator">=</span><span class="hljs-string">&#x27;浙江大学&#x27;</span>);<br></code></pre></td></tr></table></figure></li><li><p>解法二：连接查询</p><ul><li>连接查询<ul><li>默认是 <code>内连接</code></li><li><code>外连接</code> （左连接，右连接）</li></ul></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> qpd.device_id, qpd.question_id, qpd.result<br><span class="hljs-keyword">from</span> question_practice_detail <span class="hljs-keyword">as</span> qpd<br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> user_profile <span class="hljs-keyword">as</span> up<br><span class="hljs-keyword">on</span> up.device_id<span class="hljs-operator">=</span>qpd.device_id <span class="hljs-keyword">and</span> up.university<span class="hljs-operator">=</span><span class="hljs-string">&#x27;浙江大学&#x27;</span><br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> question_id<br></code></pre></td></tr></table></figure></li><li><p>两个查询的速率这个题目而言，子查询的速度快（具体谁快，等哈）</p></li></ul></li></ul><h3 id="第二十二（连接查询）"><a href="#第二十二（连接查询）" class="headerlink" title="第二十二（连接查询）"></a>第二十二（连接查询）</h3><ul><li><p><strong>题目</strong></p><p>运营想要了解每个学校答过题的用户平均答题数量情况，请你取出数据</p><p><a href="(1">传送门</a> FROM <left_table>  (2) <join_type> JOIN <right_table>  (3) ON <join_condition>  (4) WHERE <where_condition>  (5) GROUP BY <group_by_list> (6) WITH {CUBE | ROLLUP}  (7) HAVING <having_condition>  (8) SELECT (9) DISTINCT  (9) ORDER BY <order_by_list>  (10) <TOP_specification> <select_list>)</select_list></TOP_specification></order_by_list></having_condition></group_by_list></where_condition></join_condition></right_table></join_type></left_table></p></li><li><p><strong>描述</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">第一行表示:用户的常用信息为使用的设备id为2138，性别为男，年龄21岁，北京大学，gpa为3.4，在过去的30天里面活跃了7天<br>最后一行表示:用户的常用信息为使用的设备id为4321，性别为男，年龄28岁，复旦大学，gpa为3.6，在过去的30天里面活跃了9天<br></code></pre></td></tr></table></figure></li><li><p><strong>显示说明</strong></p></li><li><p>请你写SQL查找每个学校用户的平均答题数目(说明：某学校用户平均答题数量计算方式为该学校用户答题总次数除以答过题的不同用户个数)根据示例，你的查询应返回以下结果（结果保留4位小数），注意：<strong>结果按照university升序排序！！！</strong></p><table><thead><tr><th>university</th><th>avg_answer_cnt</th></tr></thead><tbody><tr><td>北京大学</td><td>1.0000</td></tr><tr><td>复旦大学</td><td>2.0000</td></tr><tr><td>山东大学</td><td>2.0000</td></tr><tr><td>浙江大学</td><td>3.0000</td></tr></tbody></table></li><li><p><strong>题解</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br>university,<br>    <span class="hljs-built_in">count</span>(question_id) <span class="hljs-operator">/</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> qpd.device_id) <span class="hljs-keyword">as</span> avg_answer_cnt<br><span class="hljs-keyword">from</span> <br>question_practice_detail <span class="hljs-keyword">as</span> qpd<br><span class="hljs-keyword">inner</span> <span class="hljs-keyword">join</span> <br>user_profile <span class="hljs-keyword">as</span> up<br><span class="hljs-keyword">on</span> <br>qpd.device_id<span class="hljs-operator">=</span>up.device_id<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <br>university<br></code></pre></td></tr></table></figure></li></ul><h3 id="第二十三（三表查询，注意去重）"><a href="#第二十三（三表查询，注意去重）" class="headerlink" title="第二十三（三表查询，注意去重）"></a>第二十三（三表查询，注意去重）</h3><ul><li><p><a href="https://www.nowcoder.com/questionTerminal/5400df085a034f88b2e17941ab338ee8">传送门</a></p></li><li><p>题解 </p><p>统计每个学校各难度的用户平均刷题数</p></li><li><p>题意明确</p><p>计算每个学校用户不同难度下的用户平均答题题目数</p></li><li><p>问题分解：</p><ul><li>限定条件：无；</li><li>每个学校：按学校分组<code>group by university</code></li><li>不同难度：按难度分组<code>group by difficult_level</code></li><li>平均答题数：总答题数除以总人数<code>count(qpd.question_id) / count(distinct qpd.device_id)</code></li><li>来自上面信息三个表，需要联表，up与qpd用device_id连接，qd与qpd用question_id连接。</li></ul></li><li><p>细节问题：</p><ul><li>表头重命名：as</li><li>平均值精度：保留4位小数round(x, 4)</li></ul></li><li><p>代码</p><ul><li>解法一（左连接）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <br>    university,<br>    difficult_level,<br>    round(<span class="hljs-built_in">count</span>(qpd.question_id) <span class="hljs-operator">/</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> qpd.device_id), <span class="hljs-number">4</span>) <span class="hljs-keyword">as</span> avg_answer_cnt<br><span class="hljs-keyword">from</span> question_practice_detail <span class="hljs-keyword">as</span> qpd<br><br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> user_profile <span class="hljs-keyword">as</span> up<br><span class="hljs-keyword">on</span> up.device_id<span class="hljs-operator">=</span>qpd.device_id<br><br><span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> question_detail <span class="hljs-keyword">as</span> qd<br><span class="hljs-keyword">on</span> qd.question_id<span class="hljs-operator">=</span>qpd.question_id<br><br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> university, difficult_level<br></code></pre></td></tr></table></figure><ul><li>解法二（内连接）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> up.university,qd.difficult_level,(<span class="hljs-built_in">count</span>(<span class="hljs-number">1</span>)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span>(qpd.device_id))) <br><span class="hljs-keyword">from</span> user_profile up <br><span class="hljs-keyword">join</span> question_practice_detail qpd <span class="hljs-keyword">on</span> up.device_id <span class="hljs-operator">=</span> qpd.device_id<br><span class="hljs-keyword">join</span> question_detail qd <span class="hljs-keyword">on</span> qd.question_id <span class="hljs-operator">=</span>qpd.question_id<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">by</span> up.university,qd.difficult_level<br></code></pre></td></tr></table></figure></li></ul><h3 id="第二十四"><a href="#第二十四" class="headerlink" title="第二十四"></a>第二十四</h3><ul><li><p>[传送门](<a href="https://www.nowcoder.com/practice/f4714f7529404679b7f8909c96299ac4?tpId=199&tqId=1971219&ru=/practice/f9f82607cac44099a77154a80266234a&qru=/ta/sql-quick-study/question-ranking&sourceUrl=/exam/oj?tab=SQL%E7%AF%87&topicId=199&fromPut=pc_wzcpa_yupi_sf">统计每个用户的平均刷题数_牛客题霸_牛客网 (nowcoder.com)</a>)</p></li><li><p>题解</p><p>统计每个用户的平均刷题数</p></li><li><p>题意明确</p></li><li><p>问题分解</p></li><li><p>细节问题</p></li><li><p>代码</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>SQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
